<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_attm_mysla_sla_request</collection>
        <condition/>
        <description>When ever a Offer / gets added or Removed from the Custom Request we will update the same in the Offers table using this BR</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_attm_mysla_sla_request">offersVALCHANGES^EQ<item endquery="false" field="offers" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update the selected offers</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	//untagging the custom requests
	var untagoffers = new GlideRecord('x_attm_mysla_offers');
	untagoffers.addEncodedQuery('custom_sla_sLIKE'+current.sys_id);
	untagoffers.query();
	while(untagoffers.next())
		{
		var allrelatedsla=	untagoffers.custom_sla_s.toString();
		var recordupdate = allrelatedsla.replace(current.sys_id,'');
		untagoffers.custom_sla_s = recordupdate.toString();
		untagoffers.update();
	}
	updatethecurrentoffers();
	
	// tagging the  custom requests
	function updatethecurrentoffers()
	{
		var offer = current.offers.toString().split(',');
		for(var i = 0; i< offer.length;i++)
			{
			var updateoffers = new GlideRecord('x_attm_mysla_offers');
			updateoffers.addQuery('sys_id',offer[i]);
			updateoffers.query();
			if(updateoffers.next())
				{updateoffers.custom_sla_s = updateoffers.custom_sla_s.toString()+',' + current.sys_id;
				updateoffers.update();
			}
		}
		
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>na571t@att.com</sys_created_by>
        <sys_created_on>2019-09-03 09:41:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>30a727971babf7406aceb9d1cd4bcbdf</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Update the selected offers</sys_name>
        <sys_overrides/>
        <sys_package display_value="MySLA" source="x_attm_mysla">a95de98adbf93700ad802ab74b9619be</sys_package>
        <sys_policy/>
        <sys_scope display_value="MySLA">a95de98adbf93700ad802ab74b9619be</sys_scope>
        <sys_update_name>sys_script_30a727971babf7406aceb9d1cd4bcbdf</sys_update_name>
        <sys_updated_by>na571t@att.com</sys_updated_by>
        <sys_updated_on>2019-09-26 10:29:01</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=30a727971babf7406aceb9d1cd4bcbdf"/>
</record_update>
